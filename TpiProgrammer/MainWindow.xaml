<Window x:Class="TpiProgrammer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:viewModel="clr-namespace:TpiProgrammer.ViewModel"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        Title="TPI Programmer" Height="350" Width="525">
    <Window.DataContext>
        <viewModel:MainWindowViewModel/>
    </Window.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal">
            <Label Content="Programmers:"/>
            <ComboBox ItemsSource="{Binding Programmers}" 
                      SelectedItem="{Binding SelectedProgrammer.Value}"
                      MinWidth="200">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Description}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <Button Command="{Binding OpenSelectedProgrammerCommand}" Content="Open"
                    Margin="4,2"/>
            
        </StackPanel>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Grid.Row="0" Text="Selected Programmer:"/>
            <TextBlock Grid.Column="1" Grid.Row="0"  Grid.ColumnSpan="2" Text="{Binding CurrentProgrammer.Value.Description}"/>
            <TextBlock Grid.Column="0" Grid.Row="1" Text="Device:"/>
            <Button Grid.Column="1" Grid.Row="1" Content="Connect" Command="{Binding ConnectToDeviceCommand}"/>
            <TextBlock Grid.Column="2" Grid.Row="1" Margin="6,0">
                <Run Text="{Binding Path=TargetDeviceSignature.Value.ManufacturerId, StringFormat={}{0:X02}}"/>
                <Run Text="-"/>
                <Run Text="{Binding Path=TargetDeviceSignature.Value.DeviceId1, StringFormat={}{0:X02}}"/>
                <Run Text="-"/>
                <Run Text="{Binding Path=TargetDeviceSignature.Value.DeviceId2, StringFormat={}{0:X02}}"/>
            </TextBlock>
        </Grid>
        <Grid Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBox Grid.Column="0" VerticalAlignment="Top" Text="{Binding FileToProgram.Value}"/>
            <Button Grid.Column="1" VerticalAlignment="Top" Content="_Browse">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <l:OpenFileDialogInteractionMessageAction>
                            <l:DirectInteractionMessage CallbackCommand="{Binding OpenImageCommand}">
                                <l:OpeningFileSelectionMessage Filter="Intel HEX Image(*.hex)|*.hex|All files|*.*" Title="Open Image File"/>
                            </l:DirectInteractionMessage>
                        </l:OpenFileDialogInteractionMessageAction>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Button Grid.Column="2" VerticalAlignment="Top" Command="{Binding ProgramToDeviceCommand}">_Program</Button>
        </Grid>
        
        <StatusBar Grid.Row="3">
            <StatusBarItem>
                <Label>
                    <Label.Style>
                        <Style TargetType="{x:Type Label}">
                            <Setter Property="Content" Value=""/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Status.Value}" Value="Programming">
                                    <Setter Property="Content" Value="Programming..."/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </StatusBarItem>
            <StatusBarItem>
                <Label Content="{Binding ProgrammingProgress.Value, StringFormat={}{0:p}}">
                    <Label.Style>
                        <Style TargetType="{x:Type Label}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Status.Value}" Value="Programming">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </StatusBarItem>
        </StatusBar>
    </Grid>
    
</Window>
